{
    "id": "41c61bb7-ff4f-480d-a989-8c59c0ea48b8",
    "data": {
        "nodes": [
            {
                "id": "ChatInput-Hbk4C",
                "type": "genericNode",
                "position": {
                    "x": -341.87628566541207,
                    "y": -21.02050341576569
                },
                "data": {
                    "type": "ChatInput",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema import Record\n\n\nclass ChatInput(ChatComponent):\n    display_name = \"Chat Input\"\n    description = \"Get chat inputs from the Interaction Panel.\"\n    icon = \"ChatInput\"\n\n    def build_config(self):\n        build_config = super().build_config()\n        build_config[\"input_value\"] = {\n            \"input_types\": [],\n            \"display_name\": \"Message\",\n            \"multiline\": True,\n        }\n\n        return build_config\n\n    def build(\n        self,\n        sender: Optional[str] = \"User\",\n        sender_name: Optional[str] = \"User\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n    ) -> Union[Text, Record]:\n        return super().build_no_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Message",
                                "advanced": false,
                                "input_types": [],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "value": "how many candidates we need to screen?"
                            },
                            "return_record": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_record",
                                "display_name": "Return Record",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Get chat inputs from the Interaction Panel.",
                        "icon": "ChatInput",
                        "base_classes": [
                            "object",
                            "Record",
                            "str",
                            "Text"
                        ],
                        "display_name": "Chat Input",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "session_id": null,
                            "return_record": null
                        },
                        "output_types": [
                            "Text",
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChatInput-Hbk4C"
                },
                "selected": false,
                "width": 384,
                "height": 373,
                "dragging": false
            },
            {
                "id": "Prompt-mkPAN",
                "type": "genericNode",
                "position": {
                    "x": 159.90631160340388,
                    "y": -654.2702995538468
                },
                "data": {
                    "type": "Prompt",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from langchain_core.prompts import PromptTemplate\n\nfrom langflow.field_typing import Prompt, TemplateField, Text\nfrom langflow.interface.custom.custom_component import CustomComponent\n\n\nclass PromptComponent(CustomComponent):\n    display_name: str = \"Prompt\"\n    description: str = \"Create a prompt template with dynamic variables.\"\n    icon = \"prompts\"\n\n    def build_config(self):\n        return {\n            \"template\": TemplateField(display_name=\"Template\"),\n            \"code\": TemplateField(advanced=True),\n        }\n\n    def build(\n        self,\n        template: Prompt,\n        **kwargs,\n    ) -> Text:\n        from langflow.base.prompts.utils import dict_values_to_string\n\n        prompt_template = PromptTemplate.from_template(Text(template))\n        kwargs = dict_values_to_string(kwargs)\n        kwargs = {k: \"\\n\".join(v) if isinstance(v, list) else v for k, v in kwargs.items()}\n        try:\n            formated_prompt = prompt_template.format(**kwargs)\n        except Exception as exc:\n            raise ValueError(f\"Error formatting prompt: {exc}\") from exc\n        self.status = f'Prompt:\\n\"{formated_prompt}\"'\n        return formated_prompt\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "template": {
                                "type": "prompt",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "Kindly provide a response to the user's inquiry, adhering to the provided context and message history. Please ensure the following rules are followed:\n\nAvoid repetition of information already stated in the context or message history.\nMaintain clarity and conciseness in your response.\nEnsure relevance to the user's question.\n\nContext: {context}\n\nMessage History:\n{history}\n\nUser's Question: {question}",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "template",
                                "display_name": "Template",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent",
                            "context": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "context",
                                "display_name": "context",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            },
                            "history": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "history",
                                "display_name": "history",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            },
                            "question": {
                                "field_type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "question",
                                "display_name": "question",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "BaseOutputParser",
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "type": "str"
                            }
                        },
                        "description": "Create a prompt template with dynamic variables.",
                        "icon": "prompts",
                        "is_input": null,
                        "is_output": null,
                        "is_composition": null,
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "name": "",
                        "display_name": "Prompt",
                        "documentation": "",
                        "custom_fields": {
                            "template": [
                                "context",
                                "history",
                                "question"
                            ]
                        },
                        "output_types": [
                            "Text"
                        ],
                        "full_path": null,
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false,
                        "error": null
                    },
                    "id": "Prompt-mkPAN",
                    "description": "Create a prompt template with dynamic variables.",
                    "display_name": "Prompt"
                },
                "selected": false,
                "width": 384,
                "height": 567,
                "dragging": false,
                "positionAbsolute": {
                    "x": 159.90631160340388,
                    "y": -654.2702995538468
                }
            },
            {
                "id": "TextInput-SCySi",
                "type": "genericNode",
                "position": {
                    "x": -853.5014549707632,
                    "y": -603.8974929004114
                },
                "data": {
                    "type": "TextInput",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "HR",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Value",
                                "advanced": false,
                                "input_types": [
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Text or Record to be passed as input.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.base.io.text import TextComponent\nfrom langflow.field_typing import Text\n\n\nclass TextInput(TextComponent):\n    display_name = \"Text Input\"\n    description = \"Get text inputs from the Interaction Panel.\"\n    icon = \"type\"\n\n    def build_config(self):\n        return {\n            \"input_value\": {\n                \"display_name\": \"Value\",\n                \"input_types\": [\"Record\", \"Text\"],\n                \"info\": \"Text or Record to be passed as input.\",\n            },\n            \"record_template\": {\n                \"display_name\": \"Record Template\",\n                \"multiline\": True,\n                \"info\": \"Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Optional[Text] = \"\",\n        record_template: Optional[str] = \"\",\n    ) -> Text:\n        return super().build(input_value=input_value, record_template=record_template)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Get text inputs from the Interaction Panel.",
                        "icon": "type",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Name",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "TextInput-SCySi"
                },
                "selected": false,
                "width": 384,
                "height": 287
            },
            {
                "id": "MemoryComponent-Ba0Tp",
                "type": "genericNode",
                "position": {
                    "x": -368.8746993518896,
                    "y": -736.4251668313334
                },
                "data": {
                    "type": "MemoryComponent",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langflow.field_typing import Text\nfrom langflow.helpers.record import records_to_text\nfrom langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.memory import get_messages\n\n\nclass MemoryComponent(CustomComponent):\n    display_name = \"Chat Memory\"\n    description = \"Retrieves stored chat messages given a specific Session ID.\"\n    beta: bool = True\n    icon = \"history\"\n\n    def build_config(self):\n        return {\n            \"sender\": {\n                \"options\": [\"Machine\", \"User\", \"Machine and User\"],\n                \"display_name\": \"Sender Type\",\n            },\n            \"sender_name\": {\"display_name\": \"Sender Name\", \"advanced\": True},\n            \"n_messages\": {\n                \"display_name\": \"Number of Messages\",\n                \"info\": \"Number of messages to retrieve.\",\n            },\n            \"session_id\": {\n                \"display_name\": \"Session ID\",\n                \"info\": \"Session ID of the chat history.\",\n                \"input_types\": [\"Text\"],\n            },\n            \"order\": {\n                \"options\": [\"Ascending\", \"Descending\"],\n                \"display_name\": \"Order\",\n                \"info\": \"Order of the messages.\",\n                \"advanced\": True,\n            },\n            \"record_template\": {\n                \"display_name\": \"Record Template\",\n                \"multiline\": True,\n                \"info\": \"Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine and User\",\n        sender_name: Optional[str] = None,\n        session_id: Optional[str] = None,\n        n_messages: int = 5,\n        order: Optional[str] = \"Descending\",\n        record_template: Optional[str] = \"{sender_name}: {text}\",\n    ) -> Text:\n        order = \"DESC\" if order == \"Descending\" else \"ASC\"\n        if sender == \"Machine and User\":\n            sender = None\n        messages = get_messages(\n            sender=sender,\n            sender_name=sender_name,\n            session_id=session_id,\n            limit=n_messages,\n            order=order,\n        )\n        messages_str = records_to_text(template=record_template or \"\", records=messages)\n        self.status = messages_str\n        return messages_str\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "n_messages": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 5,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "n_messages",
                                "display_name": "Number of Messages",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Number of messages to retrieve.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "order": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Descending",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Ascending",
                                    "Descending"
                                ],
                                "name": "order",
                                "display_name": "Order",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Order of the messages.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "{sender_name}: {text}",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Template to convert Record to Text. If left empty, it will be dynamically set to the Record's text key.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Machine and User",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User",
                                    "Machine and User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Session ID of the chat history.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Retrieves stored chat messages given a specific Session ID.",
                        "icon": "history",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "Chat Memory",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "session_id": null,
                            "n_messages": null,
                            "order": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": true
                    },
                    "id": "MemoryComponent-Ba0Tp"
                },
                "selected": false,
                "width": 384,
                "height": 486
            },
            {
                "id": "ChatOutput-jP63R",
                "type": "genericNode",
                "position": {
                    "x": 1350.5041627109374,
                    "y": -552.6439562950148
                },
                "data": {
                    "type": "ChatOutput",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langflow.base.io.chat import ChatComponent\nfrom langflow.field_typing import Text\nfrom langflow.schema import Record\n\n\nclass ChatOutput(ChatComponent):\n    display_name = \"Chat Output\"\n    description = \"Display a chat message in the Interaction Panel.\"\n    icon = \"ChatOutput\"\n\n    def build(\n        self,\n        sender: Optional[str] = \"Machine\",\n        sender_name: Optional[str] = \"AI\",\n        input_value: Optional[str] = None,\n        session_id: Optional[str] = None,\n        return_record: Optional[bool] = False,\n        record_template: Optional[str] = \"{text}\",\n    ) -> Union[Text, Record]:\n        return super().build_with_record(\n            sender=sender,\n            sender_name=sender_name,\n            input_value=input_value,\n            session_id=session_id,\n            return_record=return_record,\n            record_template=record_template or \"\",\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Message",
                                "advanced": false,
                                "input_types": [
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "record_template": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "{text}",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "record_template",
                                "display_name": "Record Template",
                                "advanced": true,
                                "dynamic": false,
                                "info": "In case of Message being a Record, this template will be used to convert it to text.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "return_record": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "return_record",
                                "display_name": "Return Record",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Return the message as a record containing the sender, sender_name, and session_id.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "sender": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "Machine",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Machine",
                                    "User"
                                ],
                                "name": "sender",
                                "display_name": "Sender Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "sender_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "AI",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "sender_name",
                                "display_name": "Sender Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "session_id": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "session_id",
                                "display_name": "Session ID",
                                "advanced": true,
                                "dynamic": false,
                                "info": "If provided, the message will be stored in the memory.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Display a chat message in the Interaction Panel.",
                        "icon": "ChatOutput",
                        "base_classes": [
                            "object",
                            "Record",
                            "str",
                            "Text"
                        ],
                        "display_name": "Chat Output",
                        "documentation": "",
                        "custom_fields": {
                            "sender": null,
                            "sender_name": null,
                            "input_value": null,
                            "session_id": null,
                            "return_record": null,
                            "record_template": null
                        },
                        "output_types": [
                            "Text",
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChatOutput-jP63R"
                },
                "selected": false,
                "width": 384,
                "height": 381,
                "dragging": false,
                "positionAbsolute": {
                    "x": 1350.5041627109374,
                    "y": -552.6439562950148
                }
            },
            {
                "id": "Chroma-56esN",
                "type": "genericNode",
                "position": {
                    "x": -121.33742600954906,
                    "y": 683.4791077027983
                },
                "data": {
                    "type": "Chroma",
                    "node": {
                        "template": {
                            "embedding": {
                                "type": "Embeddings",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "inputs": {
                                "type": "Record",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "inputs",
                                "display_name": "Input",
                                "advanced": false,
                                "input_types": [
                                    "Document",
                                    "Record"
                                ],
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chroma_server_cors_allow_origins": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_cors_allow_origins",
                                "display_name": "Server CORS Allow Origins",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chroma_server_grpc_port": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_grpc_port",
                                "display_name": "Server gRPC Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chroma_server_host": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_host",
                                "display_name": "Server Host",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chroma_server_port": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_port",
                                "display_name": "Server Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chroma_server_ssl_enabled": {
                                "type": "bool",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_ssl_enabled",
                                "display_name": "Server SSL Enabled",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import List, Optional, Union\n\nimport chromadb  # type: ignore\nfrom langchain.embeddings.base import Embeddings\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.chroma import Chroma\n\nfrom langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.schema.schema import Record\n\n\nclass ChromaComponent(CustomComponent):\n    \"\"\"\n    A custom component for implementing a Vector Store using Chroma.\n    \"\"\"\n\n    display_name: str = \"Chroma\"\n    description: str = \"Implementation of Vector Store using Chroma\"\n    documentation = \"https://python.langchain.com/docs/integrations/vectorstores/chroma\"\n    icon = \"Chroma\"\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"langflow\"},\n            \"index_directory\": {\"display_name\": \"Persist Directory\"},\n            \"code\": {\"advanced\": True, \"display_name\": \"Code\"},\n            \"inputs\": {\"display_name\": \"Input\", \"input_types\": [\"Document\", \"Record\"]},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        collection_name: str,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        index_directory: Optional[str] = None,\n        inputs: Optional[List[Record]] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> Union[VectorStore, BaseRetriever]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - index_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n\n        # If documents, then we need to create a Chroma instance using .from_documents\n\n        # Check index_directory and expand it if it is a relative path\n        if index_directory is not None:\n            index_directory = self.resolve_path(index_directory)\n\n        documents = []\n        for _input in inputs or []:\n            if isinstance(_input, Record):\n                documents.append(_input.to_lc_document())\n            else:\n                documents.append(_input)\n        if documents is not None and embedding is not None:\n            if len(documents) == 0:\n                raise ValueError(\"If documents are provided, there must be at least one document.\")\n            chroma = Chroma.from_documents(\n                documents=documents,  # type: ignore\n                persist_directory=index_directory,\n                collection_name=collection_name,\n                embedding=embedding,\n                client_settings=chroma_settings,\n            )\n        else:\n            chroma = Chroma(\n                persist_directory=index_directory,\n                client_settings=chroma_settings,\n                embedding_function=embedding,\n            )\n        return chroma\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "collection_name": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "langflow",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "collection_name",
                                "display_name": "Collection Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "index_directory": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "index_directory",
                                "display_name": "Persist Directory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Implementation of Vector Store using Chroma",
                        "icon": "Chroma",
                        "base_classes": [
                            "BaseRetriever",
                            "Generic",
                            "object",
                            "Runnable",
                            "RunnableSerializable",
                            "Serializable",
                            "VectorStore"
                        ],
                        "display_name": "Chroma",
                        "documentation": "https://python.langchain.com/docs/integrations/vectorstores/chroma",
                        "custom_fields": {
                            "collection_name": null,
                            "embedding": null,
                            "chroma_server_ssl_enabled": null,
                            "index_directory": null,
                            "inputs": null,
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_grpc_port": null
                        },
                        "output_types": [
                            "VectorStore",
                            "BaseRetriever"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "Chroma-56esN"
                },
                "selected": false,
                "width": 384,
                "height": 477,
                "dragging": false
            },
            {
                "id": "SplitText-8yGj7",
                "type": "genericNode",
                "position": {
                    "x": -835.1569998618063,
                    "y": 183.3838849110972
                },
                "data": {
                    "type": "SplitText",
                    "node": {
                        "template": {
                            "inputs": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "inputs",
                                "display_name": "Inputs",
                                "advanced": false,
                                "input_types": [
                                    "Record",
                                    "Text"
                                ],
                                "dynamic": false,
                                "info": "Texts to split.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chunk_overlap": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 200,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chunk_overlap",
                                "display_name": "Chunk Overlap",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The amount of character overlap between chunks.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chunk_size": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Max Chunk Size",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The maximum length (in number of characters) of each chunk.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional, Union\n\nfrom langchain.text_splitter import CharacterTextSplitter, RecursiveCharacterTextSplitter\nfrom langchain_core.documents import Document\n\nfrom langflow.field_typing import Text\nfrom langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.schema import Record\nfrom langflow.utils.util import unescape_string\n\n\nclass SplitTextComponent(CustomComponent):\n    display_name: str = \"Split Text\"\n    description: str = \"Split text into chunks of a specified length.\"\n\n    def build_config(self):\n        return {\n            \"inputs\": {\n                \"display_name\": \"Inputs\",\n                \"info\": \"Texts to split.\",\n                \"input_types\": [\"Record\", \"Text\"],\n            },\n            \"separators\": {\n                \"display_name\": \"Separators\",\n                \"info\": 'The characters to split on. Defaults to [\" \"].',\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\n                \"display_name\": \"Max Chunk Size\",\n                \"info\": \"The maximum length (in number of characters) of each chunk.\",\n                \"field_type\": \"int\",\n                \"value\": 1000,\n            },\n            \"chunk_overlap\": {\n                \"display_name\": \"Chunk Overlap\",\n                \"info\": \"The amount of character overlap between chunks.\",\n                \"field_type\": \"int\",\n                \"value\": 200,\n            },\n            \"recursive\": {\n                \"display_name\": \"Recursive\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        inputs: list[Text],\n        separators: Optional[list[str]] = [\" \"],\n        chunk_size: Optional[int] = 1000,\n        chunk_overlap: Optional[int] = 200,\n        recursive: bool = False,\n    ) -> list[Record]:\n        if separators is None:\n            separators = []\n        separators = [unescape_string(x) for x in separators]\n\n        # Make sure chunk_size and chunk_overlap are ints\n        if isinstance(chunk_size, str):\n            chunk_size = int(chunk_size)\n        if isinstance(chunk_overlap, str):\n            chunk_overlap = int(chunk_overlap)\n        splitter: Optional[Union[CharacterTextSplitter, RecursiveCharacterTextSplitter]] = None\n        if recursive:\n            splitter = RecursiveCharacterTextSplitter(\n                separators=separators,\n                chunk_size=chunk_size,\n                chunk_overlap=chunk_overlap,\n            )\n\n        else:\n            splitter = CharacterTextSplitter(\n                separator=separators[0],\n                chunk_size=chunk_size,\n                chunk_overlap=chunk_overlap,\n            )\n\n        documents = []\n        for _input in inputs:\n            if isinstance(_input, Record):\n                documents.append(_input.to_lc_document())\n            else:\n                documents.append(Document(page_content=_input))\n\n        records = self.to_records(splitter.split_documents(documents))\n        self.status = records\n        return records\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "recursive": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "recursive",
                                "display_name": "Recursive",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "separators": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": [
                                    " ,"
                                ],
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "separators",
                                "display_name": "Separators",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The characters to split on. Defaults to [\" \"].",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Split text into chunks of a specified length.",
                        "base_classes": [
                            "Record"
                        ],
                        "display_name": "Split Text",
                        "documentation": "",
                        "custom_fields": {
                            "inputs": null,
                            "separators": null,
                            "chunk_size": null,
                            "chunk_overlap": null,
                            "recursive": null
                        },
                        "output_types": [
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "SplitText-8yGj7"
                },
                "selected": false,
                "width": 384,
                "height": 611,
                "dragging": false
            },
            {
                "id": "ChromaSearch-txvhY",
                "type": "genericNode",
                "position": {
                    "x": 403.64060653117167,
                    "y": 27.49204864862247
                },
                "data": {
                    "type": "ChromaSearch",
                    "node": {
                        "template": {
                            "embedding": {
                                "type": "Embeddings",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "embedding",
                                "display_name": "Embedding",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Embedding model to vectorize inputs (make sure to use same as index)",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chroma_server_cors_allow_origins": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_cors_allow_origins",
                                "display_name": "Server CORS Allow Origins",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chroma_server_grpc_port": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_grpc_port",
                                "display_name": "Server gRPC Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chroma_server_host": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_host",
                                "display_name": "Server Host",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chroma_server_port": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_port",
                                "display_name": "Server Port",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "chroma_server_ssl_enabled": {
                                "type": "bool",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chroma_server_ssl_enabled",
                                "display_name": "Server SSL Enabled",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import List, Optional\n\nimport chromadb  # type: ignore\nfrom langchain_community.vectorstores.chroma import Chroma\n\nfrom langflow.components.vectorstores.base.model import LCVectorStoreComponent\nfrom langflow.field_typing import Embeddings, Text\nfrom langflow.schema import Record\n\n\nclass ChromaSearchComponent(LCVectorStoreComponent):\n    display_name: str = \"Chroma Search\"\n    description: str = \"Search a Chroma collection for similar documents.\"\n    icon = \"Chroma\"\n\n    def build_config(self):\n        \"\"\"\n        Builds the configuration for the component.\n\n        Returns:\n        - dict: A dictionary containing the configuration options for the component.\n        \"\"\"\n        return {\n            \"input_value\": {\"display_name\": \"Input\"},\n            \"search_type\": {\n                \"display_name\": \"Search Type\",\n                \"options\": [\"Similarity\", \"MMR\"],\n            },\n            \"collection_name\": {\"display_name\": \"Collection Name\", \"value\": \"langflow\"},\n            # \"persist\": {\"display_name\": \"Persist\"},\n            \"index_directory\": {\"display_name\": \"Index Directory\"},\n            \"code\": {\"show\": False, \"display_name\": \"Code\"},\n            \"embedding\": {\n                \"display_name\": \"Embedding\",\n                \"info\": \"Embedding model to vectorize inputs (make sure to use same as index)\",\n            },\n            \"chroma_server_cors_allow_origins\": {\n                \"display_name\": \"Server CORS Allow Origins\",\n                \"advanced\": True,\n            },\n            \"chroma_server_host\": {\"display_name\": \"Server Host\", \"advanced\": True},\n            \"chroma_server_port\": {\"display_name\": \"Server Port\", \"advanced\": True},\n            \"chroma_server_grpc_port\": {\n                \"display_name\": \"Server gRPC Port\",\n                \"advanced\": True,\n            },\n            \"chroma_server_ssl_enabled\": {\n                \"display_name\": \"Server SSL Enabled\",\n                \"advanced\": True,\n            },\n            \"number_of_results\": {\n                \"display_name\": \"Number of Results\",\n                \"info\": \"Number of results to return.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        search_type: str,\n        collection_name: str,\n        embedding: Embeddings,\n        chroma_server_ssl_enabled: bool,\n        number_of_results: int = 4,\n        index_directory: Optional[str] = None,\n        chroma_server_cors_allow_origins: Optional[str] = None,\n        chroma_server_host: Optional[str] = None,\n        chroma_server_port: Optional[int] = None,\n        chroma_server_grpc_port: Optional[int] = None,\n    ) -> List[Record]:\n        \"\"\"\n        Builds the Vector Store or BaseRetriever object.\n\n        Args:\n        - collection_name (str): The name of the collection.\n        - persist_directory (Optional[str]): The directory to persist the Vector Store to.\n        - chroma_server_ssl_enabled (bool): Whether to enable SSL for the Chroma server.\n        - persist (bool): Whether to persist the Vector Store or not.\n        - embedding (Optional[Embeddings]): The embeddings to use for the Vector Store.\n        - documents (Optional[Document]): The documents to use for the Vector Store.\n        - chroma_server_cors_allow_origins (Optional[str]): The CORS allow origins for the Chroma server.\n        - chroma_server_host (Optional[str]): The host for the Chroma server.\n        - chroma_server_port (Optional[int]): The port for the Chroma server.\n        - chroma_server_grpc_port (Optional[int]): The gRPC port for the Chroma server.\n\n        Returns:\n        - Union[VectorStore, BaseRetriever]: The Vector Store or BaseRetriever object.\n        \"\"\"\n\n        # Chroma settings\n        chroma_settings = None\n\n        if chroma_server_host is not None:\n            chroma_settings = chromadb.config.Settings(\n                chroma_server_cors_allow_origins=chroma_server_cors_allow_origins or None,\n                chroma_server_host=chroma_server_host,\n                chroma_server_port=chroma_server_port or None,\n                chroma_server_grpc_port=chroma_server_grpc_port or None,\n                chroma_server_ssl_enabled=chroma_server_ssl_enabled,\n            )\n        if index_directory:\n            index_directory = self.resolve_path(index_directory)\n        vector_store = Chroma(\n            embedding_function=embedding,\n            collection_name=collection_name,\n            persist_directory=index_directory,\n            client_settings=chroma_settings,\n        )\n\n        return self.search_with_vector_store(input_value, search_type, vector_store, k=number_of_results)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "collection_name": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "langflow",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "collection_name",
                                "display_name": "Collection Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "index_directory": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "index_directory",
                                "display_name": "Index Directory",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "number_of_results": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 4,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "number_of_results",
                                "display_name": "Number of Results",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Number of results to return.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "search_type": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "Similarity",
                                    "MMR"
                                ],
                                "name": "search_type",
                                "display_name": "Search Type",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "Similarity"
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Search a Chroma collection for similar documents.",
                        "icon": "Chroma",
                        "base_classes": [
                            "Record"
                        ],
                        "display_name": "Chroma Search",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "search_type": null,
                            "collection_name": null,
                            "embedding": null,
                            "chroma_server_ssl_enabled": null,
                            "number_of_results": null,
                            "index_directory": null,
                            "chroma_server_cors_allow_origins": null,
                            "chroma_server_host": null,
                            "chroma_server_port": null,
                            "chroma_server_grpc_port": null
                        },
                        "output_types": [
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "ChromaSearch-txvhY"
                },
                "selected": false,
                "width": 384,
                "height": 615,
                "dragging": false
            },
            {
                "id": "File-06sHW",
                "type": "genericNode",
                "position": {
                    "x": -1562.1671336014758,
                    "y": 157.87377137103283
                },
                "data": {
                    "type": "File",
                    "node": {
                        "template": {
                            "path": {
                                "type": "file",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [
                                    ".txt",
                                    ".md",
                                    ".mdx",
                                    ".csv",
                                    ".json",
                                    ".yaml",
                                    ".yml",
                                    ".xml",
                                    ".html",
                                    ".htm",
                                    ".pdf",
                                    ".docx",
                                    ".py",
                                    ".sh",
                                    ".sql",
                                    ".js",
                                    ".ts",
                                    ".tsx"
                                ],
                                "file_path": "41c61bb7-ff4f-480d-a989-8c59c0ea48b8\\candidates_data.csv",
                                "password": false,
                                "name": "path",
                                "display_name": "Path",
                                "advanced": false,
                                "dynamic": false,
                                "info": "Supported file types: txt, md, mdx, csv, json, yaml, yml, xml, html, htm, pdf, docx, py, sh, sql, js, ts, tsx",
                                "load_from_db": false,
                                "title_case": false,
                                "value": ""
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from pathlib import Path\nfrom typing import Any, Dict\n\nfrom langflow.base.data.utils import TEXT_FILE_TYPES, parse_text_file_to_record\nfrom langflow.interface.custom.custom_component import CustomComponent\nfrom langflow.schema import Record\n\n\nclass FileComponent(CustomComponent):\n    display_name = \"File\"\n    description = \"A generic file loader.\"\n    icon = \"file-text\"\n\n    def build_config(self) -> Dict[str, Any]:\n        return {\n            \"path\": {\n                \"display_name\": \"Path\",\n                \"field_type\": \"file\",\n                \"file_types\": TEXT_FILE_TYPES,\n                \"info\": f\"Supported file types: {', '.join(TEXT_FILE_TYPES)}\",\n            },\n            \"silent_errors\": {\n                \"display_name\": \"Silent Errors\",\n                \"advanced\": True,\n                \"info\": \"If true, errors will not raise an exception.\",\n            },\n        }\n\n    def load_file(self, path: str, silent_errors: bool = False) -> Record:\n        resolved_path = self.resolve_path(path)\n        path_obj = Path(resolved_path)\n        extension = path_obj.suffix[1:].lower()\n        if extension == \"doc\":\n            raise ValueError(\"doc files are not supported. Please save as .docx\")\n        if extension not in TEXT_FILE_TYPES:\n            raise ValueError(f\"Unsupported file type: {extension}\")\n        record = parse_text_file_to_record(resolved_path, silent_errors)\n        self.status = record if record else \"No data\"\n        return record or Record()\n\n    def build(\n        self,\n        path: str,\n        silent_errors: bool = False,\n    ) -> Record:\n        record = self.load_file(path, silent_errors)\n        self.status = record\n        return record\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "silent_errors": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "silent_errors",
                                "display_name": "Silent Errors",
                                "advanced": true,
                                "dynamic": false,
                                "info": "If true, errors will not raise an exception.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "A generic file loader.",
                        "icon": "file-text",
                        "base_classes": [
                            "Record"
                        ],
                        "display_name": "File",
                        "documentation": "",
                        "custom_fields": {
                            "path": null,
                            "silent_errors": null
                        },
                        "output_types": [
                            "Record"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "File-06sHW"
                },
                "selected": false,
                "width": 384,
                "height": 279,
                "positionAbsolute": {
                    "x": -1562.1671336014758,
                    "y": 157.87377137103283
                },
                "dragging": false
            },
            {
                "id": "OpenAIEmbeddings-ib5kR",
                "type": "genericNode",
                "position": {
                    "x": -1444.6750906888956,
                    "y": 1108.8957809727729
                },
                "data": {
                    "type": "OpenAIEmbeddings",
                    "node": {
                        "template": {
                            "allowed_special": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": [],
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "allowed_special",
                                "display_name": "Allowed Special",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "chunk_size": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 1000,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "chunk_size",
                                "display_name": "Chunk Size",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "client": {
                                "type": "Any",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "client",
                                "display_name": "Client",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Any, Dict, List, Optional\n\nfrom langchain_openai.embeddings.base import OpenAIEmbeddings\nfrom pydantic.v1 import SecretStr\n\nfrom langflow.field_typing import Embeddings, NestedDict\nfrom langflow.interface.custom.custom_component import CustomComponent\n\n\nclass OpenAIEmbeddingsComponent(CustomComponent):\n    display_name = \"OpenAI Embeddings\"\n    description = \"Generate embeddings using OpenAI models.\"\n\n    def build_config(self):\n        return {\n            \"allowed_special\": {\n                \"display_name\": \"Allowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"default_headers\": {\n                \"display_name\": \"Default Headers\",\n                \"advanced\": True,\n                \"field_type\": \"dict\",\n            },\n            \"default_query\": {\n                \"display_name\": \"Default Query\",\n                \"advanced\": True,\n                \"field_type\": \"NestedDict\",\n            },\n            \"disallowed_special\": {\n                \"display_name\": \"Disallowed Special\",\n                \"advanced\": True,\n                \"field_type\": \"str\",\n                \"is_list\": True,\n            },\n            \"chunk_size\": {\"display_name\": \"Chunk Size\", \"advanced\": True},\n            \"client\": {\"display_name\": \"Client\", \"advanced\": True},\n            \"deployment\": {\"display_name\": \"Deployment\", \"advanced\": True},\n            \"embedding_ctx_length\": {\n                \"display_name\": \"Embedding Context Length\",\n                \"advanced\": True,\n            },\n            \"max_retries\": {\"display_name\": \"Max Retries\", \"advanced\": True},\n            \"model\": {\n                \"display_name\": \"Model\",\n                \"advanced\": False,\n                \"options\": [\n                    \"text-embedding-3-small\",\n                    \"text-embedding-3-large\",\n                    \"text-embedding-ada-002\",\n                ],\n            },\n            \"model_kwargs\": {\"display_name\": \"Model Kwargs\", \"advanced\": True},\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"password\": True,\n                \"advanced\": True,\n            },\n            \"openai_api_key\": {\"display_name\": \"OpenAI API Key\", \"password\": True},\n            \"openai_api_type\": {\n                \"display_name\": \"OpenAI API Type\",\n                \"advanced\": True,\n                \"password\": True,\n            },\n            \"openai_api_version\": {\n                \"display_name\": \"OpenAI API Version\",\n                \"advanced\": True,\n            },\n            \"openai_organization\": {\n                \"display_name\": \"OpenAI Organization\",\n                \"advanced\": True,\n            },\n            \"openai_proxy\": {\"display_name\": \"OpenAI Proxy\", \"advanced\": True},\n            \"request_timeout\": {\"display_name\": \"Request Timeout\", \"advanced\": True},\n            \"show_progress_bar\": {\n                \"display_name\": \"Show Progress Bar\",\n                \"advanced\": True,\n            },\n            \"skip_empty\": {\"display_name\": \"Skip Empty\", \"advanced\": True},\n            \"tiktoken_model_name\": {\n                \"display_name\": \"TikToken Model Name\",\n                \"advanced\": True,\n            },\n            \"tiktoken_enable\": {\"display_name\": \"TikToken Enable\", \"advanced\": True},\n        }\n\n    def build(\n        self,\n        openai_api_key: str,\n        default_headers: Optional[Dict[str, str]] = None,\n        default_query: Optional[NestedDict] = {},\n        allowed_special: List[str] = [],\n        disallowed_special: List[str] = [\"all\"],\n        chunk_size: int = 1000,\n        client: Optional[Any] = None,\n        deployment: str = \"text-embedding-ada-002\",\n        embedding_ctx_length: int = 8191,\n        max_retries: int = 6,\n        model: str = \"text-embedding-ada-002\",\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        openai_api_type: Optional[str] = None,\n        openai_api_version: Optional[str] = None,\n        openai_organization: Optional[str] = None,\n        openai_proxy: Optional[str] = None,\n        request_timeout: Optional[float] = None,\n        show_progress_bar: bool = False,\n        skip_empty: bool = False,\n        tiktoken_enable: bool = True,\n        tiktoken_model_name: Optional[str] = None,\n    ) -> Embeddings:\n        # This is to avoid errors with Vector Stores (e.g Chroma)\n        if disallowed_special == [\"all\"]:\n            disallowed_special = \"all\"  # type: ignore\n        if openai_api_key:\n            api_key = SecretStr(openai_api_key)\n        else:\n            api_key = None\n\n        return OpenAIEmbeddings(\n            tiktoken_enabled=tiktoken_enable,\n            default_headers=default_headers,\n            default_query=default_query,\n            allowed_special=set(allowed_special),\n            disallowed_special=\"all\",\n            chunk_size=chunk_size,\n            client=client,\n            deployment=deployment,\n            embedding_ctx_length=embedding_ctx_length,\n            max_retries=max_retries,\n            model=model,\n            model_kwargs=model_kwargs,\n            base_url=openai_api_base,\n            api_key=api_key,\n            openai_api_type=openai_api_type,\n            api_version=openai_api_version,\n            organization=openai_organization,\n            openai_proxy=openai_proxy,\n            timeout=request_timeout,\n            show_progress_bar=show_progress_bar,\n            skip_empty=skip_empty,\n            tiktoken_model_name=tiktoken_model_name,\n        )\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "default_headers": {
                                "type": "dict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "default_headers",
                                "display_name": "Default Headers",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "default_query": {
                                "type": "NestedDict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {},
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "default_query",
                                "display_name": "Default Query",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "deployment": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "text-embedding-ada-002",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "deployment",
                                "display_name": "Deployment",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "disallowed_special": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": [
                                    "all"
                                ],
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "disallowed_special",
                                "display_name": "Disallowed Special",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "embedding_ctx_length": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 8191,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "embedding_ctx_length",
                                "display_name": "Embedding Context Length",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_retries": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 6,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_retries",
                                "display_name": "Max Retries",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "text-embedding-ada-002",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "text-embedding-3-small",
                                    "text-embedding-3-large",
                                    "text-embedding-ada-002"
                                ],
                                "name": "model",
                                "display_name": "Model",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "model_kwargs": {
                                "type": "NestedDict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {},
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "model_kwargs",
                                "display_name": "Model Kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "openai_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "sk-proj-Ga6Nzh1Oj63nuMdJJbwYT3BlbkFJwoa8JEZmuWgDYjusrepC"
                            },
                            "openai_api_type": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_type",
                                "display_name": "OpenAI API Type",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_version": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_api_version",
                                "display_name": "OpenAI API Version",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_organization": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_organization",
                                "display_name": "OpenAI Organization",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_proxy": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_proxy",
                                "display_name": "OpenAI Proxy",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "request_timeout": {
                                "type": "float",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "request_timeout",
                                "display_name": "Request Timeout",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "show_progress_bar": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "show_progress_bar",
                                "display_name": "Show Progress Bar",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "skip_empty": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "skip_empty",
                                "display_name": "Skip Empty",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "tiktoken_enable": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": true,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "tiktoken_enable",
                                "display_name": "TikToken Enable",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "tiktoken_model_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "tiktoken_model_name",
                                "display_name": "TikToken Model Name",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generate embeddings using OpenAI models.",
                        "base_classes": [
                            "Embeddings"
                        ],
                        "display_name": "OpenAI Embeddings",
                        "documentation": "",
                        "custom_fields": {
                            "openai_api_key": null,
                            "default_headers": null,
                            "default_query": null,
                            "allowed_special": null,
                            "disallowed_special": null,
                            "chunk_size": null,
                            "client": null,
                            "deployment": null,
                            "embedding_ctx_length": null,
                            "max_retries": null,
                            "model": null,
                            "model_kwargs": null,
                            "openai_api_base": null,
                            "openai_api_type": null,
                            "openai_api_version": null,
                            "openai_organization": null,
                            "openai_proxy": null,
                            "request_timeout": null,
                            "show_progress_bar": null,
                            "skip_empty": null,
                            "tiktoken_enable": null,
                            "tiktoken_model_name": null
                        },
                        "output_types": [
                            "Embeddings"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [],
                        "beta": false
                    },
                    "id": "OpenAIEmbeddings-ib5kR"
                },
                "selected": true,
                "width": 384,
                "height": 381,
                "positionAbsolute": {
                    "x": -1444.6750906888956,
                    "y": 1108.8957809727729
                },
                "dragging": false
            },
            {
                "id": "OpenAIModel-TRmUi",
                "type": "genericNode",
                "position": {
                    "x": 798.3548194603623,
                    "y": -691.1924369388319
                },
                "data": {
                    "type": "OpenAIModel",
                    "node": {
                        "template": {
                            "input_value": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "input_value",
                                "display_name": "Input",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import Optional\n\nfrom langchain_openai import ChatOpenAI\nfrom pydantic.v1 import SecretStr\n\nfrom langflow.base.constants import STREAM_INFO_TEXT\nfrom langflow.base.models.model import LCModelComponent\nfrom langflow.base.models.openai_constants import MODEL_NAMES\nfrom langflow.field_typing import NestedDict, Text\n\n\nclass OpenAIModelComponent(LCModelComponent):\n    display_name = \"OpenAI\"\n    description = \"Generates text using OpenAI LLMs.\"\n    icon = \"OpenAI\"\n\n    field_order = [\n        \"max_tokens\",\n        \"model_kwargs\",\n        \"model_name\",\n        \"openai_api_base\",\n        \"openai_api_key\",\n        \"temperature\",\n        \"input_value\",\n        \"system_message\",\n        \"stream\",\n    ]\n\n    def build_config(self):\n        return {\n            \"input_value\": {\"display_name\": \"Input\"},\n            \"max_tokens\": {\n                \"display_name\": \"Max Tokens\",\n                \"advanced\": True,\n            },\n            \"model_kwargs\": {\n                \"display_name\": \"Model Kwargs\",\n                \"advanced\": True,\n            },\n            \"model_name\": {\n                \"display_name\": \"Model Name\",\n                \"advanced\": False,\n                \"options\": MODEL_NAMES,\n            },\n            \"openai_api_base\": {\n                \"display_name\": \"OpenAI API Base\",\n                \"advanced\": True,\n                \"info\": (\n                    \"The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\\n\\n\"\n                    \"You can change this to use other APIs like JinaChat, LocalAI and Prem.\"\n                ),\n            },\n            \"openai_api_key\": {\n                \"display_name\": \"OpenAI API Key\",\n                \"info\": \"The OpenAI API Key to use for the OpenAI model.\",\n                \"advanced\": False,\n                \"password\": True,\n            },\n            \"temperature\": {\n                \"display_name\": \"Temperature\",\n                \"advanced\": False,\n                \"value\": 0.1,\n            },\n            \"stream\": {\n                \"display_name\": \"Stream\",\n                \"info\": STREAM_INFO_TEXT,\n                \"advanced\": True,\n            },\n            \"system_message\": {\n                \"display_name\": \"System Message\",\n                \"info\": \"System message to pass to the model.\",\n                \"advanced\": True,\n            },\n        }\n\n    def build(\n        self,\n        input_value: Text,\n        openai_api_key: str,\n        temperature: float,\n        model_name: str = \"gpt-4o\",\n        max_tokens: Optional[int] = 256,\n        model_kwargs: NestedDict = {},\n        openai_api_base: Optional[str] = None,\n        stream: bool = False,\n        system_message: Optional[str] = None,\n    ) -> Text:\n        if not openai_api_base:\n            openai_api_base = \"https://api.openai.com/v1\"\n        if openai_api_key:\n            api_key = SecretStr(openai_api_key)\n        else:\n            api_key = None\n\n        output = ChatOpenAI(\n            max_tokens=max_tokens,\n            model_kwargs=model_kwargs,\n            model=model_name,\n            base_url=openai_api_base,\n            api_key=api_key,\n            temperature=temperature,\n        )\n\n        return self.get_chat_result(output, stream, input_value, system_message)\n",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": true,
                                "dynamic": true,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "max_tokens": {
                                "type": "int",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": 256,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "max_tokens",
                                "display_name": "Max Tokens",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_kwargs": {
                                "type": "NestedDict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {},
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "model_kwargs",
                                "display_name": "Model Kwargs",
                                "advanced": true,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "model_name": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "value": "gpt-4o",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "options": [
                                    "gpt-4o",
                                    "gpt-4-turbo",
                                    "gpt-4-turbo-preview",
                                    "gpt-3.5-turbo",
                                    "gpt-3.5-turbo-0125"
                                ],
                                "name": "model_name",
                                "display_name": "Model Name",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_base": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "openai_api_base",
                                "display_name": "OpenAI API Base",
                                "advanced": true,
                                "dynamic": false,
                                "info": "The base URL of the OpenAI API. Defaults to https://api.openai.com/v1.\n\nYou can change this to use other APIs like JinaChat, LocalAI and Prem.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "openai_api_key": {
                                "type": "str",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": true,
                                "name": "openai_api_key",
                                "display_name": "OpenAI API Key",
                                "advanced": false,
                                "dynamic": false,
                                "info": "The OpenAI API Key to use for the OpenAI model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ],
                                "value": "sk-proj-Ga6Nzh1Oj63nuMdJJbwYT3BlbkFJwoa8JEZmuWgDYjusrepC"
                            },
                            "stream": {
                                "type": "bool",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "stream",
                                "display_name": "Stream",
                                "advanced": true,
                                "dynamic": false,
                                "info": "Stream the response from the model. Streaming works only in Chat.",
                                "load_from_db": false,
                                "title_case": false
                            },
                            "system_message": {
                                "type": "str",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "system_message",
                                "display_name": "System Message",
                                "advanced": true,
                                "dynamic": false,
                                "info": "System message to pass to the model.",
                                "load_from_db": false,
                                "title_case": false,
                                "input_types": [
                                    "Text"
                                ]
                            },
                            "temperature": {
                                "type": "float",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": "0",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "temperature",
                                "display_name": "Temperature",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "rangeSpec": {
                                    "step_type": "float",
                                    "min": -1,
                                    "max": 1,
                                    "step": 0.1
                                },
                                "load_from_db": false,
                                "title_case": false
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Generates text using OpenAI LLMs.",
                        "icon": "OpenAI",
                        "base_classes": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "display_name": "OpenAI",
                        "documentation": "",
                        "custom_fields": {
                            "input_value": null,
                            "openai_api_key": null,
                            "temperature": null,
                            "model_name": null,
                            "max_tokens": null,
                            "model_kwargs": null,
                            "openai_api_base": null,
                            "stream": null,
                            "system_message": null
                        },
                        "output_types": [
                            "Text"
                        ],
                        "field_formatters": {},
                        "frozen": false,
                        "field_order": [
                            "max_tokens",
                            "model_kwargs",
                            "model_name",
                            "openai_api_base",
                            "openai_api_key",
                            "temperature",
                            "input_value",
                            "system_message",
                            "stream"
                        ],
                        "beta": false
                    },
                    "id": "OpenAIModel-TRmUi"
                },
                "selected": false,
                "width": 384,
                "height": 559,
                "positionAbsolute": {
                    "x": 798.3548194603623,
                    "y": -691.1924369388319
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "TextInput-SCySi",
                "target": "ChatInput-Hbk4C",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-SCySiœ}",
                "targetHandle": "{œfieldNameœ:œsender_nameœ,œidœ:œChatInput-Hbk4Cœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-TextInput-SCySi{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-SCySiœ}-ChatInput-Hbk4C{œfieldNameœ:œsender_nameœ,œidœ:œChatInput-Hbk4Cœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "sender_name",
                        "id": "ChatInput-Hbk4C",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "TextInput",
                        "id": "TextInput-SCySi"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "ChatInput-Hbk4C",
                "target": "Prompt-mkPAN",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œRecordœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-Hbk4Cœ}",
                "targetHandle": "{œfieldNameœ:œquestionœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-ChatInput-Hbk4C{œbaseClassesœ:[œobjectœ,œRecordœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-Hbk4Cœ}-Prompt-mkPAN{œfieldNameœ:œquestionœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "question",
                        "id": "Prompt-mkPAN",
                        "inputTypes": [
                            "Document",
                            "BaseOutputParser",
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "Record",
                            "str",
                            "Text"
                        ],
                        "dataType": "ChatInput",
                        "id": "ChatInput-Hbk4C"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "TextInput-SCySi",
                "target": "MemoryComponent-Ba0Tp",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-SCySiœ}",
                "targetHandle": "{œfieldNameœ:œsession_idœ,œidœ:œMemoryComponent-Ba0Tpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-TextInput-SCySi{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œTextInputœ,œidœ:œTextInput-SCySiœ}-MemoryComponent-Ba0Tp{œfieldNameœ:œsession_idœ,œidœ:œMemoryComponent-Ba0Tpœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "session_id",
                        "id": "MemoryComponent-Ba0Tp",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "TextInput",
                        "id": "TextInput-SCySi"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "MemoryComponent-Ba0Tp",
                "target": "Prompt-mkPAN",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œMemoryComponentœ,œidœ:œMemoryComponent-Ba0Tpœ}",
                "targetHandle": "{œfieldNameœ:œhistoryœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-MemoryComponent-Ba0Tp{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œMemoryComponentœ,œidœ:œMemoryComponent-Ba0Tpœ}-Prompt-mkPAN{œfieldNameœ:œhistoryœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "history",
                        "id": "Prompt-mkPAN",
                        "inputTypes": [
                            "Document",
                            "BaseOutputParser",
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "MemoryComponent",
                        "id": "MemoryComponent-Ba0Tp"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "SplitText-8yGj7",
                "target": "Chroma-56esN",
                "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œSplitTextœ,œidœ:œSplitText-8yGj7œ}",
                "targetHandle": "{œfieldNameœ:œinputsœ,œidœ:œChroma-56esNœ,œinputTypesœ:[œDocumentœ,œRecordœ],œtypeœ:œRecordœ}",
                "id": "reactflow__edge-SplitText-8yGj7{œbaseClassesœ:[œRecordœ],œdataTypeœ:œSplitTextœ,œidœ:œSplitText-8yGj7œ}-Chroma-56esN{œfieldNameœ:œinputsœ,œidœ:œChroma-56esNœ,œinputTypesœ:[œDocumentœ,œRecordœ],œtypeœ:œRecordœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "inputs",
                        "id": "Chroma-56esN",
                        "inputTypes": [
                            "Document",
                            "Record"
                        ],
                        "type": "Record"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Record"
                        ],
                        "dataType": "SplitText",
                        "id": "SplitText-8yGj7"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "ChatInput-Hbk4C",
                "target": "ChromaSearch-txvhY",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œRecordœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-Hbk4Cœ}",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChromaSearch-txvhYœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-ChatInput-Hbk4C{œbaseClassesœ:[œobjectœ,œRecordœ,œstrœ,œTextœ],œdataTypeœ:œChatInputœ,œidœ:œChatInput-Hbk4Cœ}-ChromaSearch-txvhY{œfieldNameœ:œinput_valueœ,œidœ:œChromaSearch-txvhYœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "ChromaSearch-txvhY",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "Record",
                            "str",
                            "Text"
                        ],
                        "dataType": "ChatInput",
                        "id": "ChatInput-Hbk4C"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "ChromaSearch-txvhY",
                "target": "Prompt-mkPAN",
                "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œChromaSearchœ,œidœ:œChromaSearch-txvhYœ}",
                "targetHandle": "{œfieldNameœ:œcontextœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "id": "reactflow__edge-ChromaSearch-txvhY{œbaseClassesœ:[œRecordœ],œdataTypeœ:œChromaSearchœ,œidœ:œChromaSearch-txvhYœ}-Prompt-mkPAN{œfieldNameœ:œcontextœ,œidœ:œPrompt-mkPANœ,œinputTypesœ:[œDocumentœ,œBaseOutputParserœ,œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "context",
                        "id": "Prompt-mkPAN",
                        "inputTypes": [
                            "Document",
                            "BaseOutputParser",
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Record"
                        ],
                        "dataType": "ChromaSearch",
                        "id": "ChromaSearch-txvhY"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-gray-900 ",
                "selected": false
            },
            {
                "source": "File-06sHW",
                "sourceHandle": "{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-06sHWœ}",
                "target": "SplitText-8yGj7",
                "targetHandle": "{œfieldNameœ:œinputsœ,œidœ:œSplitText-8yGj7œ,œinputTypesœ:[œRecordœ,œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "inputs",
                        "id": "SplitText-8yGj7",
                        "inputTypes": [
                            "Record",
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Record"
                        ],
                        "dataType": "File",
                        "id": "File-06sHW"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground stroke-connection",
                "id": "reactflow__edge-File-06sHW{œbaseClassesœ:[œRecordœ],œdataTypeœ:œFileœ,œidœ:œFile-06sHWœ}-SplitText-8yGj7{œfieldNameœ:œinputsœ,œidœ:œSplitText-8yGj7œ,œinputTypesœ:[œRecordœ,œTextœ],œtypeœ:œstrœ}"
            },
            {
                "source": "OpenAIEmbeddings-ib5kR",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-ib5kRœ}",
                "target": "Chroma-56esN",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChroma-56esNœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "Chroma-56esN",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "OpenAIEmbeddings",
                        "id": "OpenAIEmbeddings-ib5kR"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground stroke-connection",
                "id": "reactflow__edge-OpenAIEmbeddings-ib5kR{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-ib5kRœ}-Chroma-56esN{œfieldNameœ:œembeddingœ,œidœ:œChroma-56esNœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "OpenAIEmbeddings-ib5kR",
                "sourceHandle": "{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-ib5kRœ}",
                "target": "ChromaSearch-txvhY",
                "targetHandle": "{œfieldNameœ:œembeddingœ,œidœ:œChromaSearch-txvhYœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "embedding",
                        "id": "ChromaSearch-txvhY",
                        "inputTypes": null,
                        "type": "Embeddings"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "Embeddings"
                        ],
                        "dataType": "OpenAIEmbeddings",
                        "id": "OpenAIEmbeddings-ib5kR"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground stroke-connection",
                "id": "reactflow__edge-OpenAIEmbeddings-ib5kR{œbaseClassesœ:[œEmbeddingsœ],œdataTypeœ:œOpenAIEmbeddingsœ,œidœ:œOpenAIEmbeddings-ib5kRœ}-ChromaSearch-txvhY{œfieldNameœ:œembeddingœ,œidœ:œChromaSearch-txvhYœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"
            },
            {
                "source": "Prompt-mkPAN",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mkPANœ}",
                "target": "OpenAIModel-TRmUi",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œOpenAIModel-TRmUiœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "OpenAIModel-TRmUi",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "Prompt",
                        "id": "Prompt-mkPAN"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground stroke-connection",
                "id": "reactflow__edge-Prompt-mkPAN{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œPromptœ,œidœ:œPrompt-mkPANœ}-OpenAIModel-TRmUi{œfieldNameœ:œinput_valueœ,œidœ:œOpenAIModel-TRmUiœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
            },
            {
                "source": "OpenAIModel-TRmUi",
                "sourceHandle": "{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œOpenAIModelœ,œidœ:œOpenAIModel-TRmUiœ}",
                "target": "ChatOutput-jP63R",
                "targetHandle": "{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-jP63Rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}",
                "data": {
                    "targetHandle": {
                        "fieldName": "input_value",
                        "id": "ChatOutput-jP63R",
                        "inputTypes": [
                            "Text"
                        ],
                        "type": "str"
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "object",
                            "str",
                            "Text"
                        ],
                        "dataType": "OpenAIModel",
                        "id": "OpenAIModel-TRmUi"
                    }
                },
                "style": {
                    "stroke": "#555"
                },
                "className": "stroke-foreground stroke-connection",
                "id": "reactflow__edge-OpenAIModel-TRmUi{œbaseClassesœ:[œobjectœ,œstrœ,œTextœ],œdataTypeœ:œOpenAIModelœ,œidœ:œOpenAIModel-TRmUiœ}-ChatOutput-jP63R{œfieldNameœ:œinput_valueœ,œidœ:œChatOutput-jP63Rœ,œinputTypesœ:[œTextœ],œtypeœ:œstrœ}"
            }
        ],
        "viewport": {
            "x": 716.1234879911667,
            "y": -9.934926804659085,
            "zoom": 0.41194279033867826
        }
    },
    "description": "Your Toolkit for Text Generation.",
    "name": "HR_chatbot",
    "last_tested_version": "1.0.0a33",
    "is_component": false
}